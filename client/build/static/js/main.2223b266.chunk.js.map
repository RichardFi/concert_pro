{"version":3,"sources":["pages/common/leftNav/style.js","pages/common/leftNav/index.js","pages/artists/index.js","pages/common/header/style.js","pages/common/header/index.js","pages/concerts/index.js","pages/admin/index.js","App.js","index.js"],"names":["LeftNavWrap","styled","div","_templateObject","_templateObject2","LeftNav","react_default","a","createElement","menu_default","defaultSelectedKeys","mode","theme","Item","key","react_router_dom","to","Text","Typography","Artists","_useState","useState","_useState2","Object","slicedToArray","artists","setArtists","style","margin","es_form","layout","initialValues","remember","onFinish","values","fetch","artist","then","res","json","artists_concerts","data","map","name","displayName","uri","startDate","venue","status","start","date","message","warning","label","input","placeholder","height","width","allowClear","es_button","type","htmlType","list","pagination","pageSize","itemLayout","dataSource","renderItem","item","actions","Meta","title","href","description","HeaderWrap","style_templateObject","HeaderTop","style_templateObject2","HeaderBottom","_templateObject3","HeaderBottomLeft","_templateObject4","HeaderBottomRight","_templateObject5","Header","Concerts","location","setLocation","_useState3","_useState4","concert","setConcert","row","col","span","city","lat","lng","country","id","metroArea","onClick","resultsPage","results","event","performance","Map","center","zoom","TileLayer","url","attribution","con","Marker","position","Popup","target","Footer","Layout","Sider","Content","Admin","layout_default","minHeight","backgroundColor","react_router","path","exact","component","textAlign","color","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"grBAEO,IAAMA,EAAcC,IAAOC,IAAVC,QAKCF,IAAOC,IAAVE,8BCFP,SAASC,IACpB,OACIC,EAAAC,EAAAC,cAACR,EAAD,KACIM,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,oBAAqB,CAAC,KACtBC,KAAK,SACLC,MAAM,QAENN,EAAAC,EAAAC,cAACC,EAAAF,EAAKM,KAAN,CAAWC,IAAI,KACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,SACLV,EAAAC,EAAAC,cAAA,iCAGRF,EAAAC,EAAAC,cAACC,EAAAF,EAAKM,KAAN,CAAWC,IAAI,KACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,YACLV,EAAAC,EAAAC,cAAA,8FCjBhBS,EAASC,IAATD,KAEO,SAASE,IAAU,IAAAC,EAEAC,mBAAS,IAFTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvBK,EAFuBH,EAAA,GAEdI,EAFcJ,EAAA,GAsC9B,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAD,CAAMU,MAAO,CAAEC,OAAQ,WAAvB,wGACAtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIC,OAAO,SACPC,cAAe,CAAEC,UAAU,GAC3BC,SAvCK,SAAAC,GACbC,MAAM,kBAAoBD,EAAOE,QAC5BC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIA,EAAIE,mBAChBH,KAAK,SAAAI,GAAI,OACE,MAANA,EACFA,EAAKC,IAAI,SAAAN,GAEL,OAAiB,MAAbA,EAAO,GACA,CACHO,KAAMP,EAAO,GACbQ,YAAa,KACbC,IAAK,KACLC,UAAW,KACXC,MAAO,KACPC,OAAQ,MAGL,CACHL,KAAMP,EAAO,GACbQ,YAAaR,EAAO,GAAGQ,YACvBC,IAAKT,EAAO,GAAGS,IACfC,UAAWV,EAAO,GAAGa,MAAMC,KAC3BH,MAAOX,EAAO,GAAGW,MACjBC,OAAQZ,EAAO,GAAGY,UAG1BG,IAAQC,QAAQ,qDAEvBf,KAAK,SAAAI,GAAI,OAAa,IAAPA,EAAaf,EAAWe,GAAM,MAW1Cd,MAAO,CAAEC,OAAQ,SAEjBtB,EAAAC,EAAAC,cAACqB,EAAA,EAAKhB,KAAN,CACI8B,KAAK,SACLU,MAAM,eAEN/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOC,YAAY,cAAc5B,MAAO,CAAE6B,OAAQ,OAAQC,MAAO,SAAWC,YAAU,KAE1FpD,EAAAC,EAAAC,cAACqB,EAAA,EAAKhB,KAAN,KACIP,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQC,KAAK,UAAUC,SAAS,SAASlC,MAAO,CAAE6B,OAAQ,OAAQC,MAAO,UAAzE,YAKRnD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACIC,WAAY,CAAEC,SAAU,GACxBC,WAAW,WACXC,WAAYzC,EACZ0C,WAAY,SAAAC,GAAI,OACZ9D,EAAAC,EAAAC,cAACsD,EAAA,EAAKjD,KAAN,CACIwD,QAAS,IAGT/D,EAAAC,EAAAC,cAACsD,EAAA,EAAKjD,KAAKyD,KAAX,CACIC,MAAOjE,EAAAC,EAAAC,cAAA,KAAGgE,KAAMJ,EAAKvB,KAAMuB,EAAKzB,MAChC8B,YACyB,OAAnBL,EAAKxB,YAAmC,cAAdwB,EAAKpB,OAC/B,6CADuD,2BAA4BoB,EAAKxB,YAAa,UAAYwB,EAAKtB,UAAY,OAASsB,EAAKrB,MAAMH,ioCC1EjL,IAAM8B,EAAazE,IAAOC,IAAVyE,KAKVC,EAAY3E,IAAOC,IAAV2E,KAWTC,EAAe7E,IAAOC,IAAV6E,KAMZC,EAAmB/E,IAAOC,IAAV+E,KAkBhBC,EAAoBjF,IAAOC,IAAViF,KCvCf,SAASC,IACpB,OACI9E,EAAAC,EAAAC,cAACkE,EAAD,KACIpE,EAAAC,EAAAC,cAACoE,EAAD,KACItE,EAAAC,EAAAC,cAAA,cAEJF,EAAAC,EAAAC,cAACsE,EAAD,KACIxE,EAAAC,EAAAC,cAACwE,EAAD,MAGA1E,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAA,0FCRL,SAAS6E,IAAW,IAAAjE,EAEDC,mBAAS,IAFRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE1BkE,EAF0BhE,EAAA,GAEhBiE,EAFgBjE,EAAA,GAAAkE,EAIHnE,mBAAS,IAJNoE,EAAAlE,OAAAC,EAAA,EAAAD,CAAAiE,EAAA,GAI1BE,EAJ0BD,EAAA,GAIjBE,EAJiBF,EAAA,GAiDjC,OACEnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKC,KAAM,GACTxF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,OAAO,SACPC,cAAe,CAAEC,UAAU,GAC3BC,SAjDO,SAAAC,GACfC,MAAM,oBAAsBD,EAAOoD,UAChCjD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAI,GAAI,OACRA,EAAKC,IAAI,SAAA4C,GACP,MAAO,CACLS,KAAMT,EAASS,KAAKnD,YACpBoD,IAAKV,EAASS,KAAKC,IACnBC,IAAKX,EAASS,KAAKE,IACnBC,QAASZ,EAASS,KAAKG,QAAQtD,YAC/BuD,GAAIb,EAASc,UAAUD,QAI5B9D,KAAK,SAAAiD,GAAQ,OAAIC,EAAYD,MAoCxB3D,MAAO,CAAEC,OAAQ,SAEjBtB,EAAAC,EAAAC,cAACqB,EAAA,EAAKhB,KAAN,CACE8B,KAAK,WACLU,MAAM,iBAEN/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOC,YAAY,gBAAgB5B,MAAO,CAAE6B,OAAQ,OAAQC,MAAO,SAAWC,YAAU,KAE1FpD,EAAAC,EAAAC,cAACqB,EAAA,EAAKhB,KAAN,KACEP,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQC,KAAK,UAAUC,SAAS,SAASlC,MAAO,CAAE6B,OAAQ,OAAQC,MAAO,UAAzE,YAGJnD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,WAAY,CAAEC,SAAU,GACxBC,WAAW,WACXC,WAAYoB,EACZnB,WAAY,SAAAC,GAAI,OACd9D,EAAAC,EAAAC,cAACsD,EAAA,EAAKjD,KAAN,KACEP,EAAAC,EAAAC,cAACsD,EAAA,EAAKjD,KAAKyD,KAAX,CACEC,MAAOjE,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ0C,QAAS,WAlDtClE,MAAM,mBAkDoDiC,EAlDxB+B,IAC/B9D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIA,EAAIgE,YAAYC,QAAQC,QACpCnE,KAAK,SAAAI,GAAI,OACA,MAANA,EACFA,EAAKC,IAAI,SAAAgD,GACP,MAAO,CACL/C,KAAM+C,EAAQ9C,YACdmD,KAAML,EAAQ3C,MAAMH,YACpBoD,IAAKN,EAAQ3C,MAAMiD,IACnBC,IAAKP,EAAQ3C,MAAMkD,IACnBrC,KAAK8B,EAAQ9B,KACbV,KAAMwC,EAAQzC,MAAMC,KACpBL,IAAK6C,EAAQ7C,IACb4D,YAAaf,EAAQe,YAAY/D,IAAI,SAAAN,GAAS,OAAOA,EAAOQ,iBAE3DO,IAAQC,QAAQ,2CAEtBf,KAAK,SAAAqD,GAAO,OAAgB,IAAVA,EAAgBC,EAAWD,GAAS,OAgCWtB,EAAK2B,MAC3DtB,YAAa,YAAcL,EAAK8B,eAQ1C5F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKC,KAAM,IACTxF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAK/E,MAAO,CAAE8B,MAAO,OAAQD,OAAQ,SAAWmD,OAvCvC,EAAE,KAAM,SAuCiDC,KAAM,IACtEtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAGbrB,GACCA,EAAQhD,IAAI,SAAAsE,GAAG,OACF,MAATA,EAAIhB,IAAqB,MAATgB,EAAIhB,IA2BtB,GA1BA1F,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAQC,SAAU,CAACF,EAAIhB,IAAKgB,EAAIf,KAAMnF,IAAKkG,EAAInE,KAC7CvC,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGgE,KAAMwC,EAAInE,KACXvC,EAAAC,EAAAC,cAAA,UACGwG,EAAIrE,OAGTrC,EAAAC,EAAAC,cAAA,SACG,UAAWwG,EAAIjB,MAElBzF,EAAAC,EAAAC,cAAA,SACG,SAAUwG,EAAIpD,MAEjBtD,EAAAC,EAAAC,cAAA,SACG,SAAUwG,EAAI9D,MAEjB5C,EAAAC,EAAAC,cAAA,SACG,YAAawG,EAAIP,aAEpBnG,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQa,KAAMwC,EAAInE,IAAKuE,OAAO,UAA9B,iCCjHdC,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,MAAOC,EAAYF,IAAZE,QAER,SAASC,IACtB,OACEnH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAQoB,MAAO,CAAEgG,UAAW,UAC1BrH,EAAAC,EAAAC,cAAC+G,EAAD,KACEjH,EAAAC,EAAAC,cAACH,EAAD,OAGFC,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,KACED,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAACgH,EAAD,CAAS7F,MAAO,CAAEC,OAAQ,GAAIgG,gBAAiB,SAC7CtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7G,IACjCb,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAW3C,IAClC/E,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAU7G,GAAG,QAGjBV,EAAAC,EAAAC,cAAC6G,EAAD,CAAQ1F,MAAO,CAAEsG,UAAW,SAAUC,MAAO,SAA7C,iDCrBO,SAASC,IACtB,OACE7H,EAAAC,EAAAC,cAAA,OAAK4H,UAAU,OACX9H,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOC,KAAK,IAAIE,UAAWP,MCJrC,IAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAELnI,EAAAC,EAAAC,cAAC2H,EAAD,MAEFE","file":"static/js/main.2223b266.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LeftNavWrap = styled.div`\r\n    color: white;\r\n    background-color: #002140;\r\n`;\r\n\r\nexport const NavHeader = styled.div`\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    img {\r\n        margin: 0 20px;\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n    h1 {\r\n        color: white;\r\n        margin-bottom: 0;\r\n        font-size: 20px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { LeftNavWrap, } from './style';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from 'antd/lib/menu';\r\n\r\nexport default function LeftNav() {\r\n    return (\r\n        <LeftNavWrap>\r\n            <Menu \r\n                defaultSelectedKeys={['0']}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n            >\r\n                <Menu.Item key=\"0\">\r\n                    <Link to='/home'>\r\n                        <span>Related Artists</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                    <Link to='/concert'>\r\n                        <span>Concerts</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </LeftNavWrap>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { message, Typography, Input, Button, Form, List } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Artists() {\r\n    // store related artists and their concerts\r\n    const [artists, setArtists] = useState([]);\r\n\r\n    // set the related artists and their concert information\r\n    const onFinish = values => {\r\n        fetch(\"/search/artist/\" + values.artist)\r\n            .then(res => res.json())\r\n            .then(res => res.artists_concerts)\r\n            .then(data =>\r\n                !(data==null)?\r\n                data.map(artist => {\r\n                    // only return artist name if the artist do not have a recent concert\r\n                    if (artist[1] == null) {\r\n                        return { \r\n                            name: artist[0],\r\n                            displayName: null,\r\n                            uri: null,\r\n                            startDate: null,\r\n                            venue: null,\r\n                            status: null\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            name: artist[0],\r\n                            displayName: artist[1].displayName,\r\n                            uri: artist[1].uri,\r\n                            startDate: artist[1].start.date,\r\n                            venue: artist[1].venue,\r\n                            status: artist[1].status\r\n                        };\r\n                    }\r\n                }): message.warning('Cannot find information about the input artist!')\r\n            )\r\n            .then(data => !(data===true)?setArtists(data):\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Text style={{ margin: '30px 0' }}> You may search an artist to find his/her related artists and their most recent concert information.</Text>\r\n            <Form\r\n                layout=\"inline\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                style={{ margin: \"20px\" }}\r\n            >\r\n                <Form.Item\r\n                    name=\"artist\"\r\n                    label=\"Artist Name\"\r\n                >\r\n                    <Input placeholder=\"Artist Name\" style={{ height: \"30px\", width: \"150px\" }} allowClear />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ height: \"30px\", width: \"150px\" }}>Search</Button>\r\n                </Form.Item>\r\n\r\n\r\n            </Form>\r\n            <List\r\n                pagination={{ pageSize: 5 }}\r\n                itemLayout=\"vertical\"\r\n                dataSource={artists}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={[\r\n\r\n                        ]}>\r\n                        <List.Item.Meta\r\n                            title={<a href={item.uri}>{item.name}</a>}\r\n                            description={\r\n                                !(item.displayName===null | item.status==='cancelled') ? \"The most recent concert \"+ item.displayName +\" is on \" + item.startDate + \" at \" + item.venue.displayName\r\n                                : 'The artist do not have any recent concert.'\r\n                            }\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}","import styled from 'styled-components';\r\n\r\nexport const HeaderWrap = styled.div`\r\n    height: 80px;\r\n    background-color: #fff;\r\n`;\r\n\r\nexport const HeaderTop = styled.div`\r\n    border-bottom: 1px solid #1da57a;\r\n    height: 40px;\r\n    text-align: right;\r\n    line-height: 40px;\r\n    padding-right: 20px;\r\n    span{\r\n        margin-right: 15px;\r\n    }\r\n`;\r\n\r\nexport const HeaderBottom = styled.div`\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const HeaderBottomLeft = styled.div`\r\n    font-size: 20px;\r\n    position: relative;\r\n    width: 25%;\r\n    text-align: center;\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        right: 50%;\r\n        transform: translateX(50%);\r\n        top: 100%;\r\n        border-top: 30px solid white;\r\n        border-right: 30px solid transparent;\r\n        border-bottom: 30px solid transparent;\r\n        border-left: 30px solid transparent;\r\n    }\r\n`;\r\n\r\nexport const HeaderBottomRight = styled.div`\r\n    width: 75%;\r\n    text-align: right;\r\n    margin-right: 30px;\r\n`;","import React from 'react';\r\nimport { HeaderWrap, HeaderTop, HeaderBottom, HeaderBottomLeft, HeaderBottomRight } from './style';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <HeaderWrap>\r\n            <HeaderTop>\r\n                <span></span>\r\n            </HeaderTop>\r\n            <HeaderBottom>\r\n                <HeaderBottomLeft>\r\n                    \r\n                </HeaderBottomLeft>\r\n                <HeaderBottomRight>\r\n                    <span></span>\r\n                </HeaderBottomRight>\r\n            </HeaderBottom>\r\n        </HeaderWrap>\r\n    )\r\n}\r\n\r\n","import React, { useState} from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport { message, Input, Button, Form, List, Row, Col } from 'antd';\r\n\r\nexport default function Concerts() {\r\n  // store locations of the search result\r\n  const [location, setLocation] = useState([]);\r\n  // store concerts of the user selection\r\n  const [concert, setConcert] = useState([]);\r\n\r\n  // search and set locations information\r\n  const onFinish = values => {\r\n    fetch(\"/search/location/\" + values.location)\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        data.map(location => {\r\n          return {\r\n            city: location.city.displayName,\r\n            lat: location.city.lat,\r\n            lng: location.city.lng,\r\n            country: location.city.country.displayName,\r\n            id: location.metroArea.id\r\n          };\r\n        })\r\n      )\r\n      .then(location => setLocation(location))\r\n  }\r\n\r\n  // set the markers of concerts on map\r\n  const onClickCity = values => {\r\n    fetch(\"/search/concert/\" + values.id)\r\n      .then(res => res.json())\r\n      .then(res => res.resultsPage.results.event)\r\n      .then(data =>\r\n        !(data==null)?\r\n        data.map(concert => {\r\n          return {\r\n            name: concert.displayName,\r\n            city: concert.venue.displayName,\r\n            lat: concert.venue.lat,\r\n            lng: concert.venue.lng,\r\n            type:concert.type,\r\n            date: concert.start.date,\r\n            uri: concert.uri,\r\n            performance: concert.performance.map(artist=>{return artist.displayName})\r\n          };\r\n        }):  message.warning('There is no concert in this location!')\r\n      )\r\n      .then(concert => !(concert===true)?setConcert(concert):\"\");\r\n\r\n  }\r\n  const position = [-27.5, 153.017]\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={6} >\r\n          <Form\r\n            layout=\"inline\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            style={{ margin: \"20px\" }}\r\n          >\r\n            <Form.Item\r\n              name=\"location\"\r\n              label=\"Location Name\"\r\n            >\r\n              <Input placeholder=\"Location Name\" style={{ height: \"30px\", width: \"120px\" }} allowClear />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ height: \"30px\", width: \"100px\" }}>Search</Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <List\r\n            pagination={{ pageSize: 5 }}\r\n            itemLayout=\"vertical\"\r\n            dataSource={location}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  title={<Button onClick={() => { onClickCity(item) }}>{item.city}</Button>}\r\n                  description={\"Country: \" + item.country\r\n\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <Map style={{ width: \"100%\", height: \"760px\" }} center={position} zoom={13}>\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n\r\n            {concert && (\r\n              concert.map(con =>\r\n                !(con.lat==null | con.lat==null) ? \r\n                <Marker position={[con.lat, con.lng]} key={con.uri}>\r\n                  <Popup>\r\n                    <div>\r\n                      <a href={con.uri}>\r\n                        <h3>\r\n                          {con.name}\r\n                        </h3>\r\n                      </a>          \r\n                      <p>\r\n                        {\"Venue: \"+ con.city}\r\n                      </p>\r\n                      <p>\r\n                        {\"Type: \"+ con.type}\r\n                      </p>\r\n                      <p>\r\n                        {\"Date: \"+ con.date}\r\n                      </p>\r\n                      <p>\r\n                        {\"Artists: \"+ con.performance}\r\n                      </p>\r\n                      <Button href={con.uri} target=\"_blank\">\r\n                        View on Songkick\r\n                      </Button>\r\n                    </div>\r\n                  </Popup>\r\n                </Marker>\r\n              : ''\r\n\r\n              )\r\n            )}\r\n          </Map>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch} from 'react-router-dom';\r\nimport Layout from 'antd/lib/layout';\r\nimport LeftNav from '../common/leftNav';\r\nimport Artists from '../artists';\r\nimport Header from '../common/header'\r\nimport Concerts from '../concerts';\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider>\r\n        <LeftNav>\r\n        </LeftNav>\r\n      </Sider>\r\n      <Layout>        \r\n        <Header></Header>\r\n        <Content style={{ margin: 20, backgroundColor: '#fff' }}>\r\n          <Switch>\r\n            <Route path='/' exact component={Artists}></Route>\r\n            <Route path='/concert' component={Concerts}></Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center', color: '#ccc' }}>©2020 Created by Yongrui Pan for CAB432 </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}","import React from \"react\";\nimport \"./styles.css\";\nimport Admin from './pages/admin';\nimport { BrowserRouter, Route} from 'react-router-dom';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Route path='/' component={Admin}></Route>\n        </BrowserRouter>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\n    <App />\n,\n  rootElement\n);\n"],"sourceRoot":""}